{"version":3,"file":"component---src-pages-404-js-ac989e24304a34f67e47.js","mappings":"uJAgCA,IA7BeA,IAAoC,IAAnC,SAAEC,EAAQ,MAAEC,EAAK,SAAEC,GAAUH,EAC3C,MACMI,EAD6B,MAChBH,EAASI,SAE5B,OACEC,EAAAA,cAAAA,EAAAA,SAAA,KACAA,EAAAA,cAAA,OAAKC,UAAU,iBAAiB,oBAAmBH,GACjDE,EAAAA,cAAA,UAAQC,UAAU,iBAChBD,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAG,IAAIF,UAAU,gBACrBD,EAAAA,cAAA,OAAKI,MAAM,6BAA6BC,KAAK,MAAMJ,UAAU,WAAWK,oBAAoB,OAAOC,QAAQ,iBACzGP,EAAAA,cAAA,aAAO,YACPA,EAAAA,cAAA,QAAMC,UAAU,gBAAgBO,EAAE,wiBAEpCR,EAAAA,cAAA,QAAMC,UAAU,sBAAqB,SAEvCD,EAAAA,cAAA,MAAIC,UAAU,gBACZD,EAAAA,cAAA,UAAIA,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAG,IAAIM,gBAAgB,UAAS,UAC1CT,EAAAA,cAAA,UAAIA,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAG,SAASM,gBAAgB,UAAS,YAGnDT,EAAAA,cAAA,YAAOH,GACPG,EAAAA,cAAA,cACEA,EAAAA,cAAA,KAAGC,UAAU,aAAY,iBAG1B,C,+CCjBP,MAAMS,EAAMhB,IAA6C,IAADiB,EAAAC,EAAAC,EAAA,IAA3C,YAAEC,EAAW,KAAEC,EAAI,MAAEnB,EAAK,SAAEC,GAAUH,EACjD,MAAM,KAAEsB,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBJ,GAAeE,EAAKG,aAAaL,YACnDM,EAAgC,QAApBT,EAAGK,EAAKG,oBAAY,IAAAR,OAAA,EAAjBA,EAAmBf,MAExC,OACEI,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQoB,EAAkBxB,EAAK,MAAMwB,EAAiBxB,GACtDI,EAAAA,cAAA,QAAMqB,KAAK,cAAcC,QAASJ,IAClClB,EAAAA,cAAA,QAAMuB,SAAS,WAAWD,QAAS1B,IACnCI,EAAAA,cAAA,QAAMuB,SAAS,iBAAiBD,QAASJ,IACzClB,EAAAA,cAAA,QAAMuB,SAAS,UAAUD,QAAQ,YACjCtB,EAAAA,cAAA,QAAMqB,KAAK,eAAeC,QAAQ,YAClCtB,EAAAA,cAAA,QACEqB,KAAK,kBACLC,SAA0B,QAAjBV,EAAAI,EAAKG,oBAAY,IAAAP,GAAQ,QAARC,EAAjBD,EAAmBY,cAAM,IAAAX,OAAR,EAAjBA,EAA2BY,UAAO,KAE7CzB,EAAAA,cAAA,QAAMqB,KAAK,gBAAgBC,QAAS1B,IACpCI,EAAAA,cAAA,QAAMqB,KAAK,sBAAsBC,QAASJ,IACzCrB,EACA,EAIPa,EAAIgB,aAAe,CACjBZ,YAAY,IAQd,K,mGCrDA,MAWaa,EAAOA,IAAM3B,EAAAA,cAACU,EAAAA,EAAG,CAACd,MAAM,mBAErC,UAbqBF,IAAyB,IAAxB,KAAEkC,EAAI,SAAEjC,GAAUD,EACtC,MAAMmC,EAAYD,EAAKZ,KAAKG,aAAavB,MAEzC,OACEI,EAAAA,cAAC8B,EAAAA,EAAM,CAACnC,SAAUA,EAAUC,MAAOiC,GACjC7B,EAAAA,cAAA,UAAI,kBACJA,EAAAA,cAAA,SAAG,2DACI,C","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n\n  return (\n    <>\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">\n        <Link to=\"/\" className=\"header--logo\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" className=\"svg_logo\" preserveAspectRatio=\"none\" viewBox=\"0 0 205.71 90\">\n            <title>미디어나비 로고</title>\n            <path className=\"svg_logo_path\" d=\"M202.22,0H176.37a9,9,0,0,0-7.52,5.12l-19,43.4-19-43.4A9,9,0,0,0,123.35,0H97.4a9,9,0,0,0-7.52,5.12L79.15,29.64,75.29,5.12A6.32,6.32,0,0,0,69.2,0H42.88a9,9,0,0,0-7.52,5.12L.46,84.88C-.78,87.71.58,90,3.5,90H29.34a9,9,0,0,0,7.52-5.12L47.59,60.36l3.86,24.52A6.33,6.33,0,0,0,57.54,90H83.86a9,9,0,0,0,7.53-5.12l19-43.4,19,43.4A9,9,0,0,0,136.89,90h25.94a9,9,0,0,0,7.52-5.12L205.26,5.12C206.49,2.29,205.13,0,202.22,0ZM51.51,51.4,70.44,8.16,75.23,38.6,56.31,81.84Zm61.73-16.46L125.66,6.56a2.8,2.8,0,0,1,.36.56l21,47.94L134.58,83.44a2.42,2.42,0,0,1-.36-.56Z\" />\n          </svg>\n          <span className=\"header--logo--text\">Blog</span>\n        </Link>\n        <ul className=\"header--menu\">\n          <li><Link to=\"/\" activeClassName=\"active\">Posts</Link></li>\n          <li><Link to=\"/works\" activeClassName=\"active\">Works</Link></li>\n        </ul>\n      </header>\n      <main>{children}</main>\n      <footer>\n        <p className=\"copyright\">© MediaNavi</p>\n      </footer>\n    </div>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["_ref","location","title","children","isRootPath","pathname","React","className","Link","to","xmlns","role","preserveAspectRatio","viewBox","d","activeClassName","Seo","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","lang","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","defaultProps","Head","data","siteTitle","Layout"],"sourceRoot":""}