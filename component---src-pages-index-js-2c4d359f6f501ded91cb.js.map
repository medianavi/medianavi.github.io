{"version":3,"file":"component---src-pages-index-js-2c4d359f6f501ded91cb.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\n\nconst Bio = ({author}) => {\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const authorImage = \"../images/\" + author + \".png\";\n  return (\n    <div className=\"bio\">\n      <img className=\"bio-avatar\" src={authorImage} width=\"50\" height=\"50\" alt=\"\" />\n      <p>\n        작성자 <strong>{author}</strong>\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n\n  return (\n    <>\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">\n        <Link to=\"/\" className=\"header--logo\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" className=\"svg_logo\" preserveAspectRatio=\"none\" viewBox=\"0 0 205.71 90\">\n            <title>미디어나비 로고</title>\n            <path className=\"svg_logo_path\" d=\"M202.22,0H176.37a9,9,0,0,0-7.52,5.12l-19,43.4-19-43.4A9,9,0,0,0,123.35,0H97.4a9,9,0,0,0-7.52,5.12L79.15,29.64,75.29,5.12A6.32,6.32,0,0,0,69.2,0H42.88a9,9,0,0,0-7.52,5.12L.46,84.88C-.78,87.71.58,90,3.5,90H29.34a9,9,0,0,0,7.52-5.12L47.59,60.36l3.86,24.52A6.33,6.33,0,0,0,57.54,90H83.86a9,9,0,0,0,7.53-5.12l19-43.4,19,43.4A9,9,0,0,0,136.89,90h25.94a9,9,0,0,0,7.52-5.12L205.26,5.12C206.49,2.29,205.13,0,202.22,0ZM51.51,51.4,70.44,8.16,75.23,38.6,56.31,81.84Zm61.73-16.46L125.66,6.56a2.8,2.8,0,0,1,.36.56l21,47.94L134.58,83.44a2.42,2.42,0,0,1-.36-.56Z\" />\n          </svg>\n          <span className=\"header--logo--text\">Blog</span>\n        </Link>\n        <ul className=\"header--menu\">\n          <li><Link to=\"/\" activeClassName=\"active\">Posts</Link></li>\n          <li><Link to=\"/works\" activeClassName=\"active\">Works</Link></li>\n        </ul>\n      </header>\n      <main>{children}</main>\n      <footer>\n        <p className=\"copyright\">© MediaNavi</p>\n      </footer>\n    </div>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <ol style={{ listStyle: `none`, marginLeft: 0 }}>\n        {posts.map(post => {\n          // if(post.frontmatter.category === \"works\") return\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date} / {post.frontmatter.postauthor}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(filter: {frontmatter: {category: {eq: \"blog\"}}}, sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY.MM.DD.\")\n          title\n          description\n          postauthor\n          category\n        }\n      }\n    }\n  }\n`\n"],"names":["_ref","author","authorImage","React","className","src","width","height","alt","location","title","children","isRootPath","pathname","Link","to","xmlns","role","preserveAspectRatio","viewBox","d","activeClassName","Seo","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","lang","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","defaultProps","_data$site$siteMetada","data","siteTitle","posts","allMarkdownRemark","nodes","length","Layout","Bio","style","listStyle","marginLeft","map","post","frontmatter","fields","slug","key","itemScope","itemType","itemProp","date","postauthor","dangerouslySetInnerHTML","__html","excerpt","Head"],"sourceRoot":""}